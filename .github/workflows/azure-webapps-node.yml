name: Build, Push to ACR, and Deploy to AKS

on:
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: eirik-app             # Name of your Azure Web App
  AZURE_ACR_NAME: eirikacr                 # Name of your Azure Container Registry
  AZURE_RESOURCE_GROUP: eirik.imrik_rg_1308 # Resource group for ACR and AKS
  IMAGE_NAME: eirik-app                    # Docker image name
  TAG: latest                              # Docker tag
  NODE_VERSION: "20.x"                     # Node.js version to use
  AKS_CLUSTER_NAME: eirik-aks              # Name of your AKS cluster

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      # Step 3: Install dependencies and run tests
      - name: Install and Test
        run: |
          npm install
          npm run build --if-present
          npm test --if-present

      # Step 4: Log in to Azure Container Registry
      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.AZURE_ACR_NAME }}.azurecr.io
          username: ${{ secrets.AZURE_CONTAINER_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_CONTAINER_REGISTRY_PASSWORD }}

      # Step 5: Build and Push Docker Image to ACR
      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ env.AZURE_ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ env.TAG }} .
          docker push ${{ env.AZURE_ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ env.TAG }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      # Step 1: Log in to Azure
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 2: Configure Kubernetes Cluster Context
      - name: Configure Kubernetes Cluster
        run: |
          az aks get-credentials --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --name ${{ env.AKS_CLUSTER_NAME }}

      # Step 3: Apply Kubernetes Manifests
      - name: Deploy to AKS
        run: |
          kubectl apply -f deployment.yaml
          kubectl apply -f service.yaml
